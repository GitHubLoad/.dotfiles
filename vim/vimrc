set nocompatible
filetype off

runtime macros/matchit.vim

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle ------------------------------------------------
Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'Townk/vim-autoclose'
Bundle 'tomtom/tcomment_vim'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-rails'
Bundle 'skalnik/vim-vroom'
Bundle 'rbgrouleff/bclose.vim'
Bundle 'mattn/emmet-vim'
Bundle 'Yggdroot/indentLine'
Bundle 'ervandew/supertab'
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle 'bling/vim-airline'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-ragtag'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-eunuch'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-haml'
Bundle 'scrooloose/syntastic'
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-unimpaired'
Bundle 'majutsushi/tagbar'
" Themes ------------------------------------------------------------------
Bundle 'altercation/vim-colors-solarized'
Bundle 'jpo/vim-railscasts-theme'
filetype plugin indent on 

let mapleader = ','
let maplocalleader = '\\'
syntax on
set ruler
set number
set showcmd
set hidden
set history=1000
set mouse=a

" Default Whitespace ------------------------------------------------------
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Wrapping text by default ------------------------------------------------
set wrap
set linebreak

" Searching and highlights ------------------------------------------------
set hlsearch
set incsearch
set ignorecase
set smartcase
nnoremap <silent> <Space> :nohl<Bar>:echo<CR>

" Keep more content at the bottom of the buffer ---------------------------
set scrolloff=3

" Highlight cursor line ---------------------------------------------------
set cursorline

" Tab completion ----------------------------------------------------------
set wildmenu
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,assets/*,.idea/*,*.jpg,*.png,*.gif

" Status Line -------------------------------------------------------------
set statusline=%f "tail of the filename
set statusline+=%{fugitive#statusline()}    " GIT
set statusline+=%= "left/right separator
set statusline+=%c, "cursor column
set statusline+=%l/%L "cursor line/total lines
set statusline+=\ %P "percent through file
set laststatus=2

" allow backspacing over everything in insert mode ------------------------
set backspace=indent,eol,start

" Directories for swp files -----------------------------------------------
set backupdir=~/.dotfiles/vim/vim_backups//
set directory=~/.dotfiles/vim/vim_backups//
set viewdir=~/.dotfiles/vim/vim_backups//

set undofile
if &undodir =~# '^\.\%(,\|$\)'
  let &undodir = "~/.dotfiles/vim/undo/" . &undodir
endif

" FILETYPES ---------------------------------------------------------------
"
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} set ft=markdown
au BufNewFile,BufRead *.json set ft=javascript

" Vim Terminal ------------------------------------------------------------
"
" Making cursor a bar in insert mode --------------------------------------
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

set guifont=Monaco\ For\ Powerline:h13


" Themes ------------------------------------------------------------------
set t_Co=256
set background=dark
color solarized

" Mapping -----------------------------------------------------------------

inoremap <C-f> <ESC>

" mkdir -------------------------------------------------------------------
nnoremap <leader>s :!mkdir -p %:h<cr><cr>:w<cr>

" Buffers -----------------------------------------------------------------
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>
noremap  <leader>d :Bclose<CR>
noremap  <leader>a :tabnew<CR>
noremap  <leader>A :tabc<CR>
nnoremap <leader>ev :tabe $MYVIMRC<cr>
nnoremap <leader>sv :so $MYVIMRC<cr>
nnoremap Y y$

" abbreviations -----------------------------------------------------------
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Wq wq
cnoreabbrev WQ wq
cnoreabbrev Q! q!
cnoreabbrev Qa qa

" autocommands ------------------------------------------------------------
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g'\"" | endif
augroup vimscript
  autocmd!
  autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END

" Plugins -----------------------------------------------------------------
"
" ctrlp config ------------------------------------------------------------
let g:ctrlp_map = '<leader>f'
let g:ctrlp_max_height = 30
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window_reversed = 0

" Tcomment ----------------------------------------------------------------
map <leader>c <C-_><C-_>

" NerdTree ----------------------------------------------------------------
nmap <leader>q :NERDTreeToggle<cr>

" Tagbar ----------------------------------------------------------------
nmap <leader>t :TagbarToggle<CR>


" Vroom -------------------------------------------------------------------
let g:vroom_spec_command="rspec --format documentation"

" IndentLine --------------------------------------------------------------
" let g:indentLine_color_term = 239
let g:indentLine_color_term = 236
let g:indentLine_char = '┆'
" let g:indentLine_char = '¦'

" vim-airline -------------------------------------------------------------
let g:airline_powerline_fonts = 1
" buffers tab -------------------------------------------------------------
let g:airline#extensions#tabline#enabled = 1

" SuperTab ----------------------------------------------------------------
let g:SuperTabDefaultCompletionType = "<c-n>"

" Unimpaired --------------------------------------------------------------
"
" Bubble single lines -----------------------------------------------------
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines ---------------------------------------------------
vmap <C-Up> [egv
vmap <C-Down> ]egv

